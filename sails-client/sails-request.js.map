{"version":3,"file":"sails-request.js","sourceRoot":"","sources":["../../src/sails-client/sails-request.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AAG7D,OAAO,EAAE,UAAU,EAAE,MAAM,iBAAiB,CAAC;AAI7C,OAAO,EAAE,GAAG,EAAE,MAAM,oBAAoB,CAAC;AAEzC,IAAA;;;IACS,iBAAI,GAAX,UAAY,OAAsB,EAAE,EAAkB,EAAE,aAAkC;QAChF,IAAA,uBAAM,CAAa;QAE3B,OAAO,CAAC,OAAO,GAAG,gBAAgB,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAEpD,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAC,GAAgC;YACxD,EAAE,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,EAAE,UAAC,WAA8B;gBACtD,EAAE,CAAC,CAAC,WAAW,CAAC,UAAU,IAAI,GAAG,CAAC,CAAC,CAAC;oBAClC,IAAM,KAAK,GAAG,IAAI,UAAU,CAAC,WAAW,EAAE,OAAO,CAAC,CAAC;oBACnD,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC1B,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;iBAClB;gBAAC,IAAI,CAAC,CAAC;oBACN,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;iBACvB;gBACD,GAAG,CAAC,QAAQ,EAAE,CAAC;aAChB,CAAC,CAAC;SACJ,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,UAAC,QAA2B,IAAK,OAAA,IAAI,aAAa,CAAC,QAAQ,EAAE,OAAO,CAAC,EAApC,CAAoC,CAAC,CAAC,CAAC;KACrF;uBA5BH;IA6BC,CAAA;AAnBD,wBAmBC;AAED,0BAA0B,OAAY;IACpC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,UAAA,MAAM;QACjC,EAAE,CAAC,CAAC,MAAM,CAAC,WAAW,EAAE,KAAK,MAAM,CAAC,CAAC,CAAC;YACpC,OAAO,CAAC,MAAM,CAAC,WAAW,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;YAChD,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC;SACxB;KACF,CAAC,CAAC;IAEH,MAAM,CAAC,OAAO,CAAC;CAChB","sourcesContent":["import { IRawSailsResponse } from './interfaces';\nimport { SailsError, SailsResponse } from './sails-response';\n\nimport { ISailsRequest } from './index';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs/Observer';\nimport { SocketIOSocket } from '../io';\nimport { Subject } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nexport class SailsRequest {\n  static send(request: ISailsRequest, io: SocketIOSocket, errorsSubject: Subject<SailsError>) {\n    const { method } = request;\n\n    request.headers = lowerCaseHeaders(request.headers);\n\n    return Observable.create((obs: Observer<IRawSailsResponse>) => {\n      io.emit(method, request, (rawResponse: IRawSailsResponse) => {\n        if (rawResponse.statusCode >= 400) {\n          const error = new SailsError(rawResponse, request);\n          errorsSubject.next(error);\n          obs.error(error);\n        } else {\n          obs.next(rawResponse);\n        }\n        obs.complete();\n      });\n    }).pipe(map((response: IRawSailsResponse) => new SailsResponse(response, request)));\n  }\n}\n\nfunction lowerCaseHeaders(headers: any) {\n  Object.keys(headers).forEach(header => {\n    if (header.toLowerCase() !== header) {\n      headers[header.toLowerCase()] = headers[header];\n      delete headers[header];\n    }\n  });\n\n  return headers;\n}\n"]}