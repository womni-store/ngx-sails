{"version":3,"file":"sails-client.service.d.ts","sources":["sails-client.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["import { SocketIOSocket } from '../io';\nimport { ISailsRequestOpts, ISailsResponse } from './interfaces';\nimport { ISailsClientConfig } from './sails-client.config';\nimport { Observable } from 'rxjs';\nimport { SailsError } from './sails-response';\nexport declare class SailsClient {\n    private defaultHeaders;\n    private uri;\n    private configOptions;\n    private errorsSubject;\n    io: SocketIOSocket;\n    requestErrors: Observable<SailsError>;\n    constructor(config?: ISailsClientConfig, ioInstance?: SocketIOSocket);\n    get(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    post(url: string, body?: any, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    put(url: string, body?: any, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    delete(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    options(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    head(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    patch(url: string, body: any, options?: ISailsRequestOpts): Observable<ISailsResponse>;\n    on(event: string): Observable<any>;\n    readonly configuration: ISailsClientConfig;\n    private sendRequest(url, method, data?, options?);\n    private getConfig(config);\n}\n"]}