{"version":3,"file":"sails-client.service.js","sources":["../../src/sails-client/sails-client.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { IO_INSTANCE, SocketIOConnectOpts, SocketIOSocket, io } from '../io';\nimport { ISailsRequest, ISailsRequestOpts, ISailsResponse } from './interfaces';\nimport { Inject, Injectable } from '@angular/core';\n\nimport { ISailsClientConfig } from './sails-client.config';\nimport { Observable } from 'rxjs';\nimport { Observer } from 'rxjs/Observer';\nimport { RequestMethod } from './enums';\nimport { SailsError } from './sails-response';\nimport { SailsRequest } from './sails-request';\nimport { Subject } from 'rxjs';\nimport { clean } from './utils';\n\nconst SAILS_IO_SDK_STRING = '__sails_io_sdk';\n\nconst SAILS_IO_SDK = {\n  language: 'javascript',\n  platform: 'browser',\n  version: '1.1.12',\n};\n\n@Injectable()\nexport class SailsClient {\n  private defaultHeaders: any;\n  private uri: string;\n  private configOptions: SocketIOConnectOpts;\n  private errorsSubject: Subject<SailsError>;\n\n  public io: SocketIOSocket;\n  public requestErrors: Observable<SailsError>;\n\n  constructor(config: ISailsClientConfig = {}, @Inject(IO_INSTANCE) ioInstance?: SocketIOSocket) {\n    const { uri, options } = this.getConfig(config);\n    if (config.headers) {\n      this.defaultHeaders = config.headers;\n    }\n    ioInstance ? (this.io = ioInstance) : (this.io = io(uri, options));\n    this.uri = uri;\n    this.configOptions = options;\n    this.errorsSubject = new Subject();\n    this.requestErrors = this.errorsSubject.asObservable();\n  }\n\n  get(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.GET, undefined, options);\n  }\n\n  post(url: string, body?: any, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.POST, body, options);\n  }\n\n  put(url: string, body?: any, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.PUT, body, options);\n  }\n\n  delete(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.DELETE, undefined, options);\n  }\n\n  options(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.OPTIONS, undefined, options);\n  }\n\n  head(url: string, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.HEAD, undefined, options);\n  }\n\n  patch(url: string, body: any, options?: ISailsRequestOpts): Observable<ISailsResponse> {\n    return this.sendRequest(url, RequestMethod.PATCH, body, options);\n  }\n\n  on(event: string): Observable<any> {\n    let nextFunc: (msg: any) => void;\n\n    return new Observable((obs: Observer<any>) => {\n      nextFunc = (msg: any) => obs.next(msg);\n      this.io.on(event, nextFunc);\n      return () => this.io.off(event, nextFunc);\n    });\n  }\n\n  get configuration() {\n    return <ISailsClientConfig>{\n      uri: this.uri,\n      headers: this.defaultHeaders,\n      options: this.configOptions,\n    };\n  }\n\n  private sendRequest(\n    url: string,\n    method: RequestMethod,\n    data?: any,\n    options: ISailsRequestOpts = {}\n  ) {\n    let request: ISailsRequest = { url, method, data };\n    Object.assign(request, {\n      params: options.params || options.search,\n      headers: Object.assign({}, this.defaultHeaders, options.headers),\n    });\n    return SailsRequest.send(clean(request), this.io, this.errorsSubject);\n  }\n\n  private getConfig(config: ISailsClientConfig) {\n    const options: SocketIOConnectOpts = { transports: [ 'websocket' ] };\n\n    let uri = config.uri,\n      query: any = {};\n\n    Object.assign(\n      query,\n      Object.keys(SAILS_IO_SDK).forEach(\n        k => (query[`${SAILS_IO_SDK_STRING}_${k}`] = SAILS_IO_SDK[k])\n      )\n    );\n\n    if (config.options && config.options.query) {\n      Object.assign(query, config.options.query);\n    }\n\n    Object.assign(options, config.options, { query });\n\n    return { uri, options };\n  }\n}\n"]}